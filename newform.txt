import { useEffect, useState } from "react";
import { useLanguage } from "../../hooks/useLanguage";
import { glbId } from "../../utils/glbId";
import { set } from "zod";

interface FormData {
  personalInfo: {
    nameEng: string;
    nameNep: string;
    fathersName: string;
    mothersName: string;
    grandfatherName: string;
    spouseName: string;
    gender: string;
    ethnicity: string;
    motherLanguage: string;
    email: string;
    phone: string;
    dateOfBirth: string;
    citizenship: string;
    citizenshipIssuedDistrict: string;
    citizenshipIssuedDate: string;
    hasPersonalVehicle: boolean;
    licenseNumber: string;
    vehicleType: string; // "Two Wheeler" or "Four Wheeler"
    dateOfSignature: string;
  };
  addresses: {
    permanentAddress: AddressFields;
    recentPermanentAddress: AddressFields;
    recentAddress: AddressFields;
  };
  jobInfo: {
    advertisementPublishedDate: string;
    advertisementNumber: string;
    position: string;
  };
  education: EducationEntry[];
  experience: ExperienceEntry[];
  documents: {
    resume: File | null;
    coverLetter: File | null;
    certificates: File | null;
    photo: File | null;
    signature: File | null;
  };
  training: TrainingEntry[];
}

interface AddressFields {
  district: string;
  municipality: string;
  wardNo: string;
  village: string;
}

interface EducationEntry {
  highestDegree: string;
  institution: string;
  graduationYear: string;
  grade: string;
  organization: string;
  fieldOfStudy: string;
}

interface TrainingEntry {
  trainingName: string;
  institution: string;
  duration: string;
}

interface ExperienceEntry {
  totalExperience: string;
  currentPosition: string;
  currentCompany: string;
  relevantSkills: string;
}

const JobApplicationFormPage: React.FC = () => {
  const { currentLanguage } = useLanguage();
  const [currentStep, setCurrentStep] = useState(1);
  const [formData, setFormData] = useState<FormData>({
    personalInfo: {
      nameEng: "",
      nameNep: "",
      fathersName: "",
      mothersName: "",
      grandfatherName: "",
      spouseName: "",
      gender: "",
      ethnicity: "",
      motherLanguage: "",
      email: "",
      phone: "",
      dateOfBirth: "",
      citizenship: "",
      citizenshipIssuedDistrict: "",
      citizenshipIssuedDate: "",
      hasPersonalVehicle: false,
      licenseNumber: "",
      vehicleType: "",
      dateOfSignature: "",
    },
    addresses: {
      permanentAddress: {
        district: "",
        municipality: "",
        wardNo: "",
        village: "",
      },
      recentPermanentAddress: {
        district: "",
        municipality: "",
        wardNo: "",
        village: "",
      },
      recentAddress: {
        district: "",
        municipality: "",
        wardNo: "",
        village: "",
      },
    },
    jobInfo: {
      advertisementPublishedDate: "",
      advertisementNumber: "",
      position: "",
    },
    education: [
      {
        highestDegree: "",
        institution: "",
        graduationYear: "",
        grade: "",
        organization: "",
        fieldOfStudy: "",
      },
    ],
    experience: [
      {
        totalExperience: "",
        currentPosition: "",
        currentCompany: "",
        relevantSkills: "",
      },
    ],
    documents: {
      resume: null,
      coverLetter: null,
      certificates: null,
      photo: null,
      signature: null,
    },
    training: [
      {
        trainingName: "",
        institution: "",
        duration: "",
      },
    ],
  });
  const [isSubmitting, setIsSubmitting] = useState(false);

  useEffect(() => {
    document.title = `${
      currentLanguage === "en" ? "Job Application Form" : "जागिर आवेदन फारम"
    } - Gurans Laghubitta`;
  }, [currentLanguage]);

  const totalSteps = 8;

  // Check if string contains only English characters
  const isEnglishOnly = (text: string): boolean => {
    const englishRegex = /^[a-zA-Z\s]*$/;
    return englishRegex.test(text);
  };

  // Check if string contains only Nepali characters
  const isNepaliOnly = (text: string): boolean => {
    const nepaliRegex = /^[\u0900-\u097F\s]*$/; // Nepali Unicode range
    return nepaliRegex.test(text);
  };

  const handleInputChange = (
    section: keyof FormData,
    field: string,
    value: string | boolean | File | null
  ) => {
    // Validate English-only fields
    if (section === "personalInfo" && field === "nameEng") {
      if (value && typeof value === "string") {
        if (!isEnglishOnly(value)) {
          return; // Reject non-English input
        }
        value = value.toUpperCase(); // Convert to uppercase
      }
    }

    // Validate Nepali-only fields
    if (section === "personalInfo" && field === "nameNep") {
      if (value && typeof value === "string" && !isNepaliOnly(value)) {
        return; // Reject non-Nepali input
      }
    }

    setFormData((prev) => ({
      ...prev,
      [section]: {
        ...prev[section],
        [field]: value,
      },
    }));
  };

  const handleTrainingChange = (
    index: number,
    field: string,
    value: string
  ) => {
    setFormData((prev) => {
      const updatedTraining = [...prev.training];
      updatedTraining[index] = {
        ...updatedTraining[index],
        [field]: value,
      };
      return {
        ...prev,
        training: updatedTraining,
      };
    });
  };

  const handleAddressChange = (
    addressType: keyof FormData["addresses"],
    field: keyof AddressFields,
    value: string
  ) => {
    setFormData((prev) => ({
      ...prev,
      addresses: {
        ...prev.addresses,
        [addressType]: {
          ...prev.addresses[addressType],
          [field]: value,
        },
      },
    }));
  };

  const handleExperienceChange = (
    index: number,
    field: string,
    value: string
  ) => {
    setFormData((prev) => {
      const updatedExperience = [...prev.experience];
      updatedExperience[index] = {
        ...updatedExperience[index],
        [field]: value,
      };
      return {
        ...prev,
        experience: updatedExperience,
      };
    });
  };

  const handleEducationChange = (
    index: number,
    field: string,
    value: string
  ) => {
    setFormData((prev) => {
      const updatedEducation = [...prev.education];
      updatedEducation[index] = {
        ...updatedEducation[index],
        [field]: value,
      };
      return {
        ...prev,
        education: updatedEducation,
      };
    });
  };

  const addEducationEntry = () => {
    setFormData((prev) => ({
      ...prev,
      education: [
        ...prev.education,
        {
          highestDegree: "",
          institution: "",
          graduationYear: "",
          grade: "",
          organization: "",
          fieldOfStudy: "",
        },
      ],
    }));
  };

  const addTrainingEntry = () => {
    setFormData((prev) => ({
      ...prev,
      training: [
        ...prev.training,
        {
          trainingName: "",
          institution: "",
          duration: "",
        },
      ],
    }));
  };

  const addExperienceEntry = () => {
    setFormData((prev) => ({
      ...prev,
      experience: [
        ...prev.experience,
        {
          totalExperience: "",
          currentPosition: "",
          currentCompany: "",
          relevantSkills: "",
        },
      ],
    }));
  };

  const removeEducationEntry = (index: number) => {
    setFormData((prev) => ({
      ...prev,
      education: prev.education.filter((_, i) => i !== index),
    }));
  };

  const removeTrainingEntry = (index: number) => {
    setFormData((prev) => ({
      ...prev,
      training: prev.training.filter((_, i) => i !== index),
    }));
  };

  const removeExperienceEntry = (index: number) => {
    setFormData((prev) => ({
      ...prev,
      experience: prev.experience.filter((_, i) => i !== index),
    }));
  };

  const handleFileChange = (
    field: keyof FormData["documents"],
    file: File | null
  ) => {
    setFormData((prev) => ({
      ...prev,
      documents: {
        ...prev.documents,
        [field]: file,
      },
    }));
  };

  const handleNext = () => {
    if (currentStep < totalSteps) {
      setCurrentStep(currentStep + 1);
    }
  };

  const handlePrevious = () => {
    if (currentStep > 1) {
      setCurrentStep(currentStep - 1);
    }
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);

    const formDataToSend = new FormData();

    // Append personal info
    Object.entries(formData.personalInfo).forEach(([key, value]) => {
      formDataToSend.append(key, value as string);
    });

    formData.training.forEach((training, index) => {
      Object.entries(training).forEach(([key, value]) => {
        formDataToSend.append(`training_${index}_${key}`, value);
      });
    });

    // Append addresses
    Object.entries(formData.addresses).forEach(
      ([addressType, addressFields]) => {
        Object.entries(addressFields).forEach(([key, value]) => {
          formDataToSend.append(`${addressType}_${key}`, value);
        });
      }
    );

    // Append job info
    Object.entries(formData.jobInfo).forEach(([key, value]) => {
      formDataToSend.append(key, value);
    });

    // Append education info
    formData.education.forEach((edu, index) => {
      Object.entries(edu).forEach(([key, value]) => {
        formDataToSend.append(`education_${index}_${key}`, value);
      });
    });

    // Append experience info
    formData.experience.forEach((exp, index) => {
      Object.entries(exp).forEach(([key, value]) => {
        formDataToSend.append(`experience_${index}_${key}`, value);
      });
    });

    // Append documents
    Object.entries(formData.documents).forEach(([key, file]) => {
      if (file) {
        formDataToSend.append(key, file);
      }
    });

    try {
      const response = await fetch("http://localhost:5000/submit-application", {
        method: "POST",
        body: formDataToSend,
      });

      if (response.ok) {
        alert(
          currentLanguage === "en"
            ? "Application submitted successfully! We will contact you soon."
            : "आवेदन सफलतापूर्वक पेश गरियो! हामी तपाईंलाई छिट्टै सम्पर्क गर्नेछौं।"
        );
      } else {
        alert(
          currentLanguage === "en"
            ? "Failed to submit the application. Please try again later."
            : "आवेदन पेश गर्न असफल। कृपया पछि प्रयास गर्नुहोस्।"
        );
      }
    } catch (error) {
      console.error("Error submitting application:", error);
      alert(
        currentLanguage === "en"
          ? "An error occurred while submitting the application."
          : "आवेदन पेश गर्दा त्रुटि भयो।"
      );
    } finally {
      setIsSubmitting(false);
    }
  };

  const renderStepContent = () => {
    switch (currentStep) {
      case 1:
        return (
          <div className="space-y-6" id={glbId("career", "form", "personal")}>
            <h3 className="text-xl font-bold text-gray-900 mb-4">
              {currentLanguage === "en"
                ? "Personal Information"
                : "व्यक्तिगत जानकारी"}
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {/* English Name */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en"
                    ? "Name (English)"
                    : "नाम (अंग्रेजी)"}{" "}
                  *
                </label>
                <input
                  type="text"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.nameEng}
                  onChange={(e) =>
                    handleInputChange("personalInfo", "nameEng", e.target.value)
                  }
                />
              </div>

              {/* Name Nepali */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en" ? "Name (Nepali)" : "नाम (नेपाली)"}{" "}
                  *
                </label>
                <input
                  type="text"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.nameNep}
                  onChange={(e) =>
                    handleInputChange("personalInfo", "nameNep", e.target.value)
                  }
                />
              </div>

              {/* Father's Name */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en" ? "Father's Name" : "बुवाको नाम"} *
                </label>
                <input
                  type="text"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.fathersName}
                  onChange={(e) =>
                    handleInputChange(
                      "personalInfo",
                      "fathersName",
                      e.target.value
                    )
                  }
                />
              </div>

              {/* Mother's Name */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en" ? "Mother's Name" : "आमाको नाम"} *
                </label>
                <input
                  type="text"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.mothersName}
                  onChange={(e) =>
                    handleInputChange(
                      "personalInfo",
                      "mothersName",
                      e.target.value
                    )
                  }
                />
              </div>

              {/* Grandfather's Name */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en"
                    ? "Grandfather's Name"
                    : "हजुरबुवाको नाम"}{" "}
                  *
                </label>
                <input
                  type="text"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.grandfatherName}
                  onChange={(e) =>
                    handleInputChange(
                      "personalInfo",
                      "grandfatherName",
                      e.target.value
                    )
                  }
                />
              </div>

              {/* Spouse's Name (conditionally displayed if married) */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en"
                    ? "Spouse's Name (if married)"
                    : "पति/पत्नीको नाम (यदि विवाहित हुनुहुन्छ भने)"}
                </label>
                <input
                  type="text"
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.spouseName}
                  onChange={(e) =>
                    handleInputChange(
                      "personalInfo",
                      "spouseName",
                      e.target.value
                    )
                  }
                />
              </div>

              {/* Date of Birth */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en" ? "Date of Birth" : "जन्म मिति"} *
                </label>
                <input
                  type="date"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.dateOfBirth}
                  onChange={(e) =>
                    handleInputChange(
                      "personalInfo",
                      "dateOfBirth",
                      e.target.value
                    )
                  }
                />
              </div>
            </div>
          </div>
        );

      case 2:
        return (
          <div
            className="space-y-6"
            id={glbId("career", "form", "personal-info")}
          >
            <h3 className="text-xl font-bold text-gray-900 mb-4">
              {currentLanguage === "en"
                ? "Personal Information"
                : "व्यक्तिगत जानकारी"}
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {/* Gender */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en" ? "Gender" : "लिङ्ग"} *
                </label>
                <select
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.gender}
                  onChange={(e) =>
                    handleInputChange("personalInfo", "gender", e.target.value)
                  }
                >
                  <option value="">
                    {currentLanguage === "en"
                      ? "Select Gender"
                      : "लिङ्ग छान्नुहोस्"}
                  </option>
                  <option value="Male">
                    {currentLanguage === "en" ? "Male" : "पुरुष"}
                  </option>
                  <option value="Female">
                    {currentLanguage === "en" ? "Female" : "महिला"}
                  </option>
                  <option value="Other">
                    {currentLanguage === "en" ? "Other" : "अन्य"}
                  </option>
                </select>
              </div>

              {/* Ethnicity */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en" ? "Ethnicity" : "जातीयता"} *
                </label>
                <input
                  type="text"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.ethnicity}
                  onChange={(e) =>
                    handleInputChange(
                      "personalInfo",
                      "ethnicity",
                      e.target.value
                    )
                  }
                />
              </div>

              {/* Mother Language */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en" ? "Mother Language" : "मातृभाषा"} *
                </label>
                <input
                  type="text"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.motherLanguage}
                  onChange={(e) =>
                    handleInputChange(
                      "personalInfo",
                      "motherLanguage",
                      e.target.value
                    )
                  }
                />
              </div>

              {/* Citizenship Number */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en"
                    ? "Citizenship Number"
                    : "नागरिकता नम्बर"}{" "}
                  *
                </label>
                <input
                  type="text"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.citizenship}
                  onChange={(e) =>
                    handleInputChange(
                      "personalInfo",
                      "citizenship",
                      e.target.value
                    )
                  }
                />
              </div>

              {/* Citizenship Issued District */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en"
                    ? "Citizenship Issued District"
                    : "नागरिकता जारी जिल्ला"}{" "}
                  *
                </label>
                <input
                  type="text"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.citizenshipIssuedDistrict}
                  onChange={(e) =>
                    handleInputChange(
                      "personalInfo",
                      "citizenshipIssuedDistrict",
                      e.target.value
                    )
                  }
                />
              </div>

              {/* Citizenship Issued Date */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en"
                    ? "Citizenship Issued Date"
                    : "नागरिकता जारी मिति"}{" "}
                  *
                </label>
                <input
                  type="date"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.citizenshipIssuedDate}
                  onChange={(e) =>
                    handleInputChange(
                      "personalInfo",
                      "citizenshipIssuedDate",
                      e.target.value
                    )
                  }
                />
              </div>

              {/* Has Personal Vehicle */}
              <div className="col-span-2">
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en"
                    ? "Do you have a personal vehicle?"
                    : "के तपाईंसँग व्यक्तिगत सवारी साधन छ?"}
                </label>
                <div className="flex items-center space-x-4">
                  <input
                    type="checkbox"
                    className="h-5 w-5 text-glb-primary-600 focus:ring-glb-primary-500 border-gray-300 rounded"
                    checked={formData.personalInfo.hasPersonalVehicle}
                    onChange={(e) =>
                      handleInputChange(
                        "personalInfo",
                        "hasPersonalVehicle",
                        e.target.checked
                      )
                    }
                  />
                  <span className="text-sm text-gray-700">
                    {currentLanguage === "en" ? "Yes" : "हो"}
                  </span>
                </div>
              </div>

              {/* License Number (conditionally displayed if hasPersonalVehicle is true) */}
              {formData.personalInfo.hasPersonalVehicle && (
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    {currentLanguage === "en"
                      ? "License Number"
                      : "लाइसेन्स नम्बर"}{" "}
                    *
                  </label>
                  <input
                    type="text"
                    required
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                    value={formData.personalInfo.licenseNumber}
                    onChange={(e) =>
                      handleInputChange(
                        "personalInfo",
                        "licenseNumber",
                        e.target.value
                      )
                    }
                  />
                </div>
              )}

              {/* Vehicle Type (conditionally displayed if hasPersonalVehicle is true) */}
              {formData.personalInfo.hasPersonalVehicle && (
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    {currentLanguage === "en"
                      ? "Vehicle Type"
                      : "सवारी साधनको प्रकार"}{" "}
                    *
                  </label>
                  <div className="flex items-center space-x-4">
                    <label className="flex items-center space-x-2">
                      <input
                        type="checkbox"
                        className="h-5 w-5 text-glb-primary-600 focus:ring-glb-primary-500 border-gray-300 rounded"
                        checked={
                          formData.personalInfo.vehicleType === "Two Wheeler"
                        }
                        onChange={(e) =>
                          handleInputChange(
                            "personalInfo",
                            "vehicleType",
                            e.target.checked ? "Two Wheeler" : ""
                          )
                        }
                      />
                      <span className="text-sm text-gray-700">
                        {currentLanguage === "en"
                          ? "Two Wheeler"
                          : "दुई पाङ्ग्रे"}
                      </span>
                    </label>
                    <label className="flex items-center space-x-2">
                      <input
                        type="checkbox"
                        className="h-5 w-5 text-glb-primary-600 focus:ring-glb-primary-500 border-gray-300 rounded"
                        checked={
                          formData.personalInfo.vehicleType === "Four Wheeler"
                        }
                        onChange={(e) =>
                          handleInputChange(
                            "personalInfo",
                            "vehicleType",
                            e.target.checked ? "Four Wheeler" : ""
                          )
                        }
                      />
                      <span className="text-sm text-gray-700">
                        {currentLanguage === "en"
                          ? "Four Wheeler"
                          : "चार पाङ्ग्रे"}
                      </span>
                    </label>
                  </div>
                </div>
              )}
            </div>
          </div>
        );

      case 3:
        return (
          <div
            className="space-y-6"
            id={glbId("career", "form", "contact-info")}
          >
            <h3 className="text-xl font-bold text-gray-900 mb-4">
              {currentLanguage === "en"
                ? "Personal Information and Address"
                : "व्यक्तिगत जानकारी र ठेगाना"}
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {/* Mobile Number */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en" ? "Mobile Number" : "मोबाइल नम्बर"}{" "}
                  *
                </label>
                <input
                  type="text"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.phone}
                  onChange={(e) =>
                    handleInputChange("personalInfo", "phone", e.target.value)
                  }
                />
              </div>

              {/* Email */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en" ? "Email Address" : "इमेल ठेगाना"} *
                </label>
                <input
                  type="email"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.email}
                  onChange={(e) =>
                    handleInputChange("personalInfo", "email", e.target.value)
                  }
                />
              </div>

              {/* Permanent Address */}
              <div className="col-span-2">
                <h4 className="text-lg font-semibold text-gray-800 mb-2">
                  {currentLanguage === "en"
                    ? "Permanent Address (as per Citizenship)"
                    : "स्थायी ठेगाना (नागरिकता अनुसार)"}
                </h4>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en" ? "District" : "जिल्ला"} *
                    </label>
                    <input
                      type="text"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={formData.addresses.permanentAddress.district}
                      onChange={(e) =>
                        handleAddressChange(
                          "permanentAddress",
                          "district",
                          e.target.value
                        )
                      }
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en"
                        ? "VDC/Municipality/Metropolitan"
                        : "गाउँ/नगरपालिका/महानगरपालिका"}{" "}
                      *
                    </label>
                    <input
                      type="text"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={formData.addresses.permanentAddress.municipality}
                      onChange={(e) =>
                        handleAddressChange(
                          "permanentAddress",
                          "municipality",
                          e.target.value
                        )
                      }
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en" ? "Ward No." : "वडा नम्बर"} *
                    </label>
                    <input
                      type="number"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={formData.addresses.permanentAddress.wardNo}
                      onChange={(e) =>
                        handleAddressChange(
                          "permanentAddress",
                          "wardNo",
                          e.target.value
                        )
                      }
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en" ? "Village" : "गाउँ"} *
                    </label>
                    <input
                      type="text"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={formData.addresses.permanentAddress.village}
                      onChange={(e) =>
                        handleAddressChange(
                          "permanentAddress",
                          "village",
                          e.target.value
                        )
                      }
                    />
                  </div>
                </div>
              </div>

              {/* Recent Permanent Address */}
              <div className="col-span-2">
                <h4 className="text-lg font-semibold text-gray-800 mb-2">
                  {currentLanguage === "en"
                    ? "Recent Permanent Address"
                    : "हालको स्थायी ठेगाना"}
                </h4>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en" ? "District" : "जिल्ला"} *
                    </label>
                    <input
                      type="text"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={formData.addresses.recentPermanentAddress.district}
                      onChange={(e) =>
                        handleAddressChange(
                          "recentPermanentAddress",
                          "district",
                          e.target.value
                        )
                      }
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en"
                        ? "VDC/Municipality/Metropolitan"
                        : "गाउँ/नगरपालिका/महानगरपालिका"}{" "}
                      *
                    </label>
                    <input
                      type="text"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={
                        formData.addresses.recentPermanentAddress.municipality
                      }
                      onChange={(e) =>
                        handleAddressChange(
                          "recentPermanentAddress",
                          "municipality",
                          e.target.value
                        )
                      }
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en" ? "Ward No." : "वडा नम्बर"} *
                    </label>
                    <input
                      type="number"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={formData.addresses.recentPermanentAddress.wardNo}
                      onChange={(e) =>
                        handleAddressChange(
                          "recentPermanentAddress",
                          "wardNo",
                          e.target.value
                        )
                      }
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en" ? "Village" : "गाउँ"} *
                    </label>
                    <input
                      type="text"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={formData.addresses.recentPermanentAddress.village}
                      onChange={(e) =>
                        handleAddressChange(
                          "recentPermanentAddress",
                          "village",
                          e.target.value
                        )
                      }
                    />
                  </div>
                </div>
              </div>

              {/* Recent Address */}
              <div className="col-span-2">
                <h4 className="text-lg font-semibold text-gray-800 mb-2">
                  {currentLanguage === "en" ? "Recent Address" : "हालको ठेगाना"}
                </h4>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en" ? "District" : "जिल्ला"} *
                    </label>
                    <input
                      type="text"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={formData.addresses.recentAddress.district}
                      onChange={(e) =>
                        handleAddressChange(
                          "recentAddress",
                          "district",
                          e.target.value
                        )
                      }
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en"
                        ? "VDC/Municipality/Metropolitan"
                        : "गाउँ/नगरपालिका/महानगरपालिका"}{" "}
                      *
                    </label>
                    <input
                      type="text"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={formData.addresses.recentAddress.municipality}
                      onChange={(e) =>
                        handleAddressChange(
                          "recentAddress",
                          "municipality",
                          e.target.value
                        )
                      }
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en" ? "Ward No." : "वडा नम्बर"} *
                    </label>
                    <input
                      type="number"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={formData.addresses.recentAddress.wardNo}
                      onChange={(e) =>
                        handleAddressChange(
                          "recentAddress",
                          "wardNo",
                          e.target.value
                        )
                      }
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en" ? "Village" : "गाउँ"} *
                    </label>
                    <input
                      type="text"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={formData.addresses.recentAddress.village}
                      onChange={(e) =>
                        handleAddressChange(
                          "recentAddress",
                          "village",
                          e.target.value
                        )
                      }
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
        );

      case 4:
        return (
          <div className="space-y-6" id={glbId("career", "form", "job")}>
            <h3 className="text-xl font-bold text-gray-900 mb-4">
              {currentLanguage === "en"
                ? "Training background"
                : "प्रशिक्षण सम्बन्धी जानकारी"}
            </h3>

            {formData.training.map((training, index) => (
              <div
                key={index}
                className="border border-gray-300 rounded-lg p-6 relative bg-gray-50"
              >
                <div className="flex justify-between items-center mb-4">
                  <h4 className="text-lg font-semibold text-gray-800">
                    {currentLanguage === "en"
                      ? `Training ${index + 1}`
                      : `प्रशिक्षण ${index + 1}`}
                  </h4>
                  {formData.training.length > 1 && (
                    <button
                      type="button"
                      onClick={() => removeTrainingEntry(index)}
                      className="px-3 py-1 bg-red-500 text-white rounded-lg hover:bg-red-600 transition"
                    >
                      {currentLanguage === "en" ? "Remove" : "हटाउनुहोस्"}
                    </button>
                  )}
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  {/* Training name */}
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en"
                        ? "Training name"
                        : "प्रशिक्षण नाम"}{" "}
                      *
                    </label>
                    <input
                      type="text"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={training.trainingName}
                      onChange={(e) =>
                        handleTrainingChange(
                          index,
                          "trainingName",
                          e.target.value
                        )
                      }
                    />
                  </div>

                  {/* Training institution */}
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en" ? "Institution" : "संस्था"} *
                    </label>
                    <input
                      type="text"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={training.institution}
                      onChange={(e) =>
                        handleTrainingChange(
                          index,
                          "institution",
                          e.target.value
                        )
                      }
                    />
                  </div>

                  {/* Training duration */}
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en"
                        ? "Training Duration"
                        : "प्रशिक्षण अवधि"}{" "}
                      *
                    </label>
                    <input
                      type="text"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={training.duration}
                      onChange={(e) =>
                        handleTrainingChange(index, "duration", e.target.value)
                      }
                    />
                  </div>
                </div>
              </div>
            ))}

            {formData.training.length < 3 && (
              <button
                type="button"
                onClick={addTrainingEntry}
                className="px-6 py-2 bg-glb-primary-500 text-white rounded-lg hover:bg-glb-primary-600 transition font-medium"
              >
                {currentLanguage === "en"
                  ? "+ Add Another Training"
                  : "+ अर्को प्रशिक्षण थप्नुहोस्"}
              </button>
            )}

            {formData.training.length === 3 && (
              <div className="p-4 bg-blue-100 border border-blue-300 rounded-lg text-blue-800">
                {currentLanguage === "en"
                  ? "Maximum 3 trainings allowed"
                  : "अधिकतम ३ प्रशिक्षण अनुमति दिइएको छ"}
              </div>
            )}
          </div>
        );

      case 5:
        return (
          <div className="space-y-6" id={glbId("career", "form", "job")}>
            <h3 className="text-xl font-bold text-gray-900 mb-4">
              {currentLanguage === "en" ? "Job Information" : "जागिरको जानकारी"}
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {/* Advertisement Published Date */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en"
                    ? "Advertisement Published Date"
                    : "विज्ञापन प्रकाशित मिति"}{" "}
                  *
                </label>
                <input
                  type="date"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.jobInfo.advertisementPublishedDate}
                  onChange={(e) =>
                    handleInputChange(
                      "jobInfo",
                      "advertisementPublishedDate",
                      e.target.value
                    )
                  }
                />
              </div>

              {/* Advertisement Number */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en"
                    ? "Advertisement Number"
                    : "विज्ञापन नम्बर"}{" "}
                  *
                </label>
                <input
                  type="text"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.jobInfo.advertisementNumber}
                  onChange={(e) =>
                    handleInputChange(
                      "jobInfo",
                      "advertisementNumber",
                      e.target.value
                    )
                  }
                />
              </div>

              {/* Desired Position */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en" ? "Desired Position" : "चाहिएको पद"}{" "}
                  *
                </label>
                <input
                  type="text"
                  required
                  placeholder={
                    currentLanguage === "en"
                      ? "Enter desired position"
                      : "चाहिएको पद प्रविष्ट गर्नुहोस्"
                  }
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.jobInfo.position}
                  onChange={(e) =>
                    handleInputChange("jobInfo", "position", e.target.value)
                  }
                />
              </div>
            </div>
          </div>
        );

      case 6:
        return (
          <div className="space-y-6" id={glbId("career", "form", "education")}>
            <h3 className="text-xl font-bold text-gray-900 mb-4">
              {currentLanguage === "en"
                ? "Educational Background"
                : "शैक्षिक पृष्ठभूमि"}
            </h3>

            {formData.education.map((edu, index) => (
              <div
                key={index}
                className="border border-gray-300 rounded-lg p-6 relative bg-gray-50"
              >
                <div className="flex justify-between items-center mb-4">
                  <h4 className="text-lg font-semibold text-gray-800">
                    {currentLanguage === "en"
                      ? `Education ${index + 1}`
                      : `शिक्षा ${index + 1}`}
                  </h4>
                  {formData.education.length > 1 && (
                    <button
                      type="button"
                      onClick={() => removeEducationEntry(index)}
                      className="px-3 py-1 bg-red-500 text-white rounded-lg hover:bg-red-600 transition"
                    >
                      {currentLanguage === "en" ? "Remove" : "हटाउनुहोस्"}
                    </button>
                  )}
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en"
                        ? "Highest Degree"
                        : "उच्चतम डिग्री"}{" "}
                      *
                    </label>
                    <select
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={edu.highestDegree}
                      onChange={(e) =>
                        handleEducationChange(
                          index,
                          "highestDegree",
                          e.target.value
                        )
                      }
                    >
                      <option value="">
                        {currentLanguage === "en"
                          ? "Select Degree"
                          : "डिग्री छान्नुहोस्"}
                      </option>
                      <option value="SLC/SEE">SLC/SEE</option>
                      <option value="+2/Intermediate">+2/Intermediate</option>
                      <option value="Bachelor's">Bachelor's</option>
                      <option value="Master's">Master's</option>
                      <option value="PhD">PhD</option>
                    </select>
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en"
                        ? "University"
                        : "विश्वविद्यालय"}{" "}
                      *
                    </label>
                    <input
                      type="text"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={edu.institution}
                      onChange={(e) =>
                        handleEducationChange(
                          index,
                          "institution",
                          e.target.value
                        )
                      }
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en"
                        ? "Organization name"
                        : "संस्था"}{" "}
                      *
                    </label>
                    <input
                      type="text"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={edu.organization}
                      onChange={(e) =>
                        handleEducationChange(
                          index,
                          "organization",
                          e.target.value
                        )
                      }
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en"
                        ? "Graduation Year"
                        : "स्नातक वर्ष"}{" "}
                      *
                    </label>
                    <input
                      type="number"
                      required
                      min="1990"
                      max="2030"
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={edu.graduationYear}
                      onChange={(e) =>
                        handleEducationChange(
                          index,
                          "graduationYear",
                          e.target.value
                        )
                      }
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en"
                        ? "Major Subject/Field of Study"
                        : "प्रमुख विषय/अध्ययन क्षेत्र"}{" "}
                      *
                    </label>
                    <input
                      type="text"
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={edu.fieldOfStudy}
                      onChange={(e) =>
                        handleEducationChange(
                          index,
                          "fieldOfStudy",
                          e.target.value
                        )
                      }
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en"
                        ? "Grade/Percentage"
                        : "ग्रेड/प्रतिशत"}{" "}
                      *
                    </label>
                    <input
                      type="text"
                      required
                      placeholder={
                        currentLanguage === "en"
                          ? "A/3.5 GPA/75%"
                          : "A/३.५ GPA/७५%"
                      }
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={edu.grade}
                      onChange={(e) =>
                        handleEducationChange(index, "grade", e.target.value)
                      }
                    />
                  </div>
                </div>
              </div>
            ))}

            {formData.education.length < 4 && (
              <button
                type="button"
                onClick={addEducationEntry}
                className="px-6 py-2 bg-glb-primary-500 text-white rounded-lg hover:bg-glb-primary-600 transition font-medium"
              >
                {currentLanguage === "en"
                  ? "+ Add Another Education"
                  : "+ अर्को शिक्षा थप्नुहोस्"}
              </button>
            )}

            {formData.education.length === 4 && (
              <div className="p-4 bg-blue-100 border border-blue-300 rounded-lg text-blue-800">
                {currentLanguage === "en"
                  ? "Maximum 4 educations allowed"
                  : "अधिकतम ४ शिक्षा अनुमति दिइएको छ"}
              </div>
            )}
          </div>
        );
      case 7:
        return (
          <div className="space-y-6" id={glbId("career", "form", "experience")}>
            <h3 className="text-xl font-bold text-gray-900 mb-4">
              {currentLanguage === "en" ? "Work Experience" : "कार्य अनुभव"}
            </h3>

            {formData.experience.map((exp, index) => (
              <div
                key={index}
                className="border border-gray-300 rounded-lg p-6 relative bg-gray-50"
              >
                <div className="flex justify-between items-center mb-4">
                  <h4 className="text-lg font-semibold text-gray-800">
                    {currentLanguage === "en"
                      ? `Experience ${index + 1}`
                      : `अनुभव ${index + 1}`}
                  </h4>
                  {formData.experience.length > 1 && (
                    <button
                      type="button"
                      onClick={() => removeExperienceEntry(index)}
                      className="px-3 py-1 bg-red-500 text-white rounded-lg hover:bg-red-600 transition"
                    >
                      {currentLanguage === "en" ? "Remove" : "हटाउनुहोस्"}
                    </button>
                  )}
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en"
                        ? "Total Experience"
                        : "कुल अनुभव"}{" "}
                      *
                    </label>
                    <select
                      required
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={exp.totalExperience}
                      onChange={(e) =>
                        handleExperienceChange(
                          index,
                          "totalExperience",
                          e.target.value
                        )
                      }
                    >
                      <option value="">
                        {currentLanguage === "en"
                          ? "Select Experience"
                          : "अनुभव छान्नुहोस्"}
                      </option>
                      <option value="Fresh Graduate">Fresh Graduate</option>
                      <option value="less than year">less than year</option>
                      <option value="1-2 years">1-2 years</option>
                      <option value="2-5 years">2-5 years</option>
                      <option value="5-10 years">5-10 years</option>
                      <option value="10+ years">10+ years</option>
                    </select>
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en"
                        ? "Current Position"
                        : "हालको पद"}
                    </label>
                    <input
                      type="text"
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={exp.currentPosition}
                      onChange={(e) =>
                        handleExperienceChange(
                          index,
                          "currentPosition",
                          e.target.value
                        )
                      }
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en"
                        ? "Current Company"
                        : "हालको कम्पनी"}
                    </label>
                    <input
                      type="text"
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={exp.currentCompany}
                      onChange={(e) =>
                        handleExperienceChange(
                          index,
                          "currentCompany",
                          e.target.value
                        )
                      }
                    />
                  </div>
                  <div className="md:col-span-2">
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      {currentLanguage === "en"
                        ? "Relevant Skills"
                        : "सान्दर्भिक सीपहरू"}{" "}
                      *
                    </label>
                    <textarea
                      required
                      rows={4}
                      placeholder={
                        currentLanguage === "en"
                          ? "List your relevant skills, certifications, and competencies..."
                          : "तपाईंका सान्दर्भिक सीपहरू, प्रमाणपत्रहरू, र दक्षताहरू सूचीबद्ध गर्नुहोस्..."
                      }
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                      value={exp.relevantSkills}
                      onChange={(e) =>
                        handleExperienceChange(
                          index,
                          "relevantSkills",
                          e.target.value
                        )
                      }
                    />
                  </div>
                </div>
              </div>
            ))}

            {formData.experience.length < 3 && (
              <button
                type="button"
                onClick={addExperienceEntry}
                className="px-6 py-2 bg-glb-primary-500 text-white rounded-lg hover:bg-glb-primary-600 transition font-medium"
              >
                {currentLanguage === "en"
                  ? "+ Add Another Experience"
                  : "+ अर्को अनुभव थप्नुहोस्"}
              </button>
            )}

            {formData.experience.length === 3 && (
              <div className="p-4 bg-blue-100 border border-blue-300 rounded-lg text-blue-800">
                {currentLanguage === "en"
                  ? "Maximum 3 experiences allowed"
                  : "अधिकतम ३ अनुभव अनुमति दिइएको छ"}
              </div>
            )}
          </div>
        );

      case 8:
        return (
          <div className="space-y-6" id={glbId("career", "form", "documents")}>
            <h3 className="text-xl font-bold text-gray-900 mb-4">
              {currentLanguage === "en" ? "Document Upload" : "कागजात अपलोड"}
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {/* Resume/CV */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en" ? "Resume/CV" : "बायोडाटा"} *
                </label>
                <input
                  type="file"
                  required
                  accept=".pdf,.doc,.docx"
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  onChange={(e) =>
                    handleFileChange("resume", e.target.files?.[0] || null)
                  }
                />
                <p className="text-xs text-gray-500 mt-1">
                  PDF, DOC, DOCX (Max 5MB)
                </p>
              </div>

              {/* Cover Letter */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en" ? "Cover Letter" : "कभर लेटर"}
                </label>
                <input
                  type="file"
                  accept=".pdf,.doc,.docx"
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  onChange={(e) =>
                    handleFileChange("coverLetter", e.target.files?.[0] || null)
                  }
                />
                <p className="text-xs text-gray-500 mt-1">
                  PDF, DOC, DOCX (Max 5MB)
                </p>
              </div>

              {/* Educational Certificates */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en"
                    ? "Educational Certificates"
                    : "शैक्षिक प्रमाणपत्रहरू"}{" "}
                  *
                </label>
                <input
                  type="file"
                  required
                  accept=".pdf,.jpg,.jpeg,.png"
                  multiple
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  onChange={(e) =>
                    handleFileChange(
                      "certificates",
                      e.target.files?.[0] || null
                    )
                  }
                />
                <p className="text-xs text-gray-500 mt-1">
                  PDF, JPG, PNG (Max 10MB total)
                </p>
              </div>

              {/* Passport Photo */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en"
                    ? "Passport Photo"
                    : "पासपोर्ट साइज फोटो"}{" "}
                  *
                </label>
                <input
                  type="file"
                  required
                  accept=".jpg,.jpeg,.png"
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  onChange={(e) =>
                    handleFileChange("photo", e.target.files?.[0] || null)
                  }
                />
                <p className="text-xs text-gray-500 mt-1">JPG, PNG (Max 2MB)</p>
              </div>

              {/* Signature */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en" ? "Signature" : "हस्ताक्षर"} *
                </label>
                <input
                  type="file"
                  required
                  accept=".jpg,.jpeg,.png"
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  onChange={(e) =>
                    handleFileChange("signature", e.target.files?.[0] || null)
                  }
                />
                <p className="text-xs text-gray-500 mt-1">
                  {currentLanguage === "en"
                    ? "JPG, PNG (Max 2MB)"
                    : "JPG, PNG (अधिकतम २MB)"}
                </p>
              </div>

               {/* Signature date */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {currentLanguage === "en" ? "Signature Date" : "हस्ताक्षर मिति"} *
                </label>
                <input
                  type="date"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-glb-primary-500 focus:border-glb-primary-500"
                  value={formData.personalInfo.dateOfSignature}
                  onChange={(e) =>
                    handleInputChange(
                      "personalInfo",
                      "dateOfSignature",
                      e.target.value
                    )
                  }
                />
              </div>
            </div>

            {/* Important Notes */}
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
              <h4 className="font-medium text-blue-900 mb-2">
                {currentLanguage === "en"
                  ? "Important Notes:"
                  : "महत्वपूर्ण नोटहरू:"}
              </h4>
              <ul className="text-sm text-blue-800 space-y-1">
                <li>
                  •{" "}
                  {currentLanguage === "en"
                    ? "All documents must be clear and readable"
                    : "सबै कागजातहरू स्पष्ट र पढ्न योग्य हुनुपर्छ"}
                </li>
                <li>
                  •{" "}
                  {currentLanguage === "en"
                    ? "File sizes must not exceed specified limits"
                    : "फाइल साइजहरू निर्दिष्ट सीमा भन्दा बढी हुनु हुँदैन"}
                </li>
                <li>
                  •{" "}
                  {currentLanguage === "en"
                    ? "Only shortlisted candidates will be contacted"
                    : "छनोट भएका उम्मेदवारहरूलाई मात्र सम्पर्क गरिनेछ"}
                </li>
              </ul>
            </div>
          </div>
        );

      default:
        return null;
    }
  };

  return (
    <div
      className="min-h-screen bg-white"
      id={glbId("career", "form", "container")}
    >
      {/* Hero Section */}
      <section
        className="bg-gradient-to-r from-glb-primary-600 to-glb-secondary-600 text-white py-20"
        id={glbId("career", "form", "hero")}
      >
        <div className="container mx-auto px-4 text-center">
          <h1
            className="text-4xl md:text-5xl font-bold mb-6"
            id={glbId("career", "form", "title")}
          >
            {currentLanguage === "en"
              ? "Job Application Form"
              : "जागिर आवेदन फारम"}
          </h1>
          <p
            className="text-xl text-glb-primary-100 max-w-3xl mx-auto"
            id={glbId("career", "form", "subtitle")}
          >
            {currentLanguage === "en"
              ? "Complete the form below to apply for available positions at Gurans Laghubitta"
              : "गुराँस लघुवित्तमा उपलब्ध पदहरूका लागि आवेदन दिन तलको फारम भर्नुहोस्"}
          </p>
        </div>
      </section>

      {/* Progress Bar */}
      <section
        className="py-8 bg-gray-50 border-b"
        id={glbId("career", "form", "progress")}
      >
        <div className="container mx-auto px-4">
          <div className="flex items-center justify-center">
            {Array.from({ length: totalSteps }, (_, index) => (
              <div key={index} className="flex items-center">
                <div
                  className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${
                    index + 1 <= currentStep
                      ? "bg-glb-primary-600 text-white"
                      : "bg-gray-300 text-gray-600"
                  }`}
                >
                  {index + 1}
                </div>
                {index < totalSteps - 1 && (
                  <div
                    className={`w-12 h-0.5 mx-2 ${
                      index + 1 < currentStep
                        ? "bg-glb-primary-600"
                        : "bg-gray-300"
                    }`}
                  />
                )}
              </div>
            ))}
          </div>
          <div className="text-center mt-4">
            <p className="text-sm text-gray-600">
              {currentLanguage === "en" ? "Step" : "चरण"} {currentStep}{" "}
              {currentLanguage === "en" ? "of" : "को"} {totalSteps}
            </p>
          </div>
        </div>
      </section>

      {/* Form Content */}
      <section className="py-20" id={glbId("career", "form", "content")}>
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto">
            <form onSubmit={handleSubmit}>
              {renderStepContent()}

              {/* Navigation Buttons */}
              <div className="flex justify-between mt-8 pt-8 border-t border-gray-200">
                <button
                  type="button"
                  onClick={handlePrevious}
                  disabled={currentStep === 1}
                  className={`px-6 py-3 rounded-lg font-semibold transition-colors ${
                    currentStep === 1
                      ? "bg-gray-300 text-gray-500 cursor-not-allowed"
                      : "bg-gray-500 text-white hover:bg-gray-600"
                  }`}
                >
                  {currentLanguage === "en" ? "Previous" : "अघिल्लो"}
                </button>

                {currentStep < totalSteps ? (
                  <button
                    type="button"
                    onClick={handleNext}
                    className="px-6 py-3 bg-glb-primary-600 text-white rounded-lg font-semibold hover:bg-glb-primary-700 transition-colors"
                  >
                    {currentLanguage === "en" ? "Next" : "अर्को"}
                  </button>
                ) : (
                  <button
                    type="submit"
                    disabled={isSubmitting}
                    className={`px-8 py-3 rounded-lg font-semibold transition-colors ${
                      isSubmitting
                        ? "bg-gray-400 text-gray-600 cursor-not-allowed"
                        : "bg-glb-secondary-600 text-white hover:bg-glb-secondary-700"
                    }`}
                  >
                    {isSubmitting
                      ? currentLanguage === "en"
                        ? "Submitting..."
                        : "पेश गर्दै..."
                      : currentLanguage === "en"
                      ? "Submit Application"
                      : "आवेदन पेश गर्नुहोस्"}
                  </button>
                )}
              </div>
            </form>
          </div>
        </div>
      </section>

      {/* Help Section */}
      <section
        className="py-16 bg-gray-50"
        id={glbId("career", "form", "help")}
      >
        <div className="container mx-auto px-4">
          <div className="text-center mb-8">
            <h2 className="text-2xl font-bold text-gray-900 mb-4">
              {currentLanguage === "en" ? "Need Help?" : "मद्दत चाहिन्छ?"}
            </h2>
            <p className="text-gray-700 max-w-2xl mx-auto">
              {currentLanguage === "en"
                ? "If you have any questions about the application process, please contact our HR department."
                : "यदि तपाईंलाई आवेदन प्रक्रियाको बारेमा कुनै प्रश्न छ भने, कृपया हाम्रो मानव संसाधन विभागमा सम्पर्क गर्नुहोस्।"}
            </p>
          </div>

          <div className="flex flex-col sm:flex-row gap-6 justify-center">
            <div className="bg-white p-6 rounded-lg shadow-lg border text-center">
              <div className="w-12 h-12 bg-glb-primary-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-glb-primary-600 text-xl">📞</span>
              </div>
              <h3 className="font-semibold text-gray-900 mb-2">
                {currentLanguage === "en" ? "Phone Support" : "फोन सहयोग"}
              </h3>
              <p className="text-gray-600 text-sm">+977-25-581234</p>
            </div>

            <div className="bg-white p-6 rounded-lg shadow-lg border text-center">
              <div className="w-12 h-12 bg-glb-primary-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-glb-primary-600 text-xl">📧</span>
              </div>
              <h3 className="font-semibold text-gray-900 mb-2">
                {currentLanguage === "en" ? "Email Support" : "इमेल सहयोग"}
              </h3>
              <p className="text-gray-600 text-sm">
                hr@guranslaghubitta.com.np
              </p>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
};

export default JobApplicationFormPage;
